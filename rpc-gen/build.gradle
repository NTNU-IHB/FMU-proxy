plugins {
    id 'java-library'
}

apply from: rootProject.file("gradle/mavenpublish.gradle")
apply from: rootProject.file("gradle/bintraypublish.gradle")

dependencies {

    api group: 'org.apache.thrift', name: 'libthrift', version: '0.13.0'
    implementation("javax.annotation:javax.annotation-api:1.3.2")

}


if (!getProperties().get("disableCodeGeneration", false)) {

    def definitions = rootProject.file("thrift")
    def generatedSrcDir = project.file("src/main/java")

    if (project.file('thrift.exe').exists()) {

        tasks.create('generateThrift') {

            doLast {

                generatedSrcDir.mkdirs()

                if (generatedSrcDir.listFiles().size() == 0) {

                    try {

                        exec {
                            workingDir(projectDir)
                            executable project.file('thrift')
                            args '-r', '-out', generatedSrcDir, '--gen', 'java:private-members,fullcamel',
                                    "$definitions/defs.thrift"
                        }
                        exec {
                            workingDir(projectDir)
                            executable project.file('thrift')
                            args '-r', '-out', generatedSrcDir, '--gen', 'java:private-members,fullcamel',
                                    "$definitions/service.thrift"
                        }
                        exec {
                            workingDir(projectDir)
                            executable project.file('thrift')
                            args '-r', '-out', generatedSrcDir, '--gen', 'java:private-members,fullcamel',
                                    "$definitions/internal_service.thrift"
                        }

                    } catch (Exception ex) {
                        println ex
                    }

                }
            }

            group 'thrift'
            compileJava.dependsOn generateThrift

        }

    }

}
