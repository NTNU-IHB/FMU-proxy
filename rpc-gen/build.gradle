
plugins {
    id 'kotlin'
    id 'java-library'
    id "com.google.protobuf" version '0.8.10'
}

apply from: rootProject.file("gradle/mavenpublish.gradle")
apply from: rootProject.file("gradle/bintraypublish.gradle")

dependencies {

    api group: 'io.grpc', name: 'grpc-stub', version: grpc_version
    api group: 'io.grpc', name: 'grpc-protobuf', version: grpc_version

    api group: 'org.apache.thrift', name: 'libthrift', version: '0.13.0'
    implementation("javax.annotation:javax.annotation-api:1.3.2")

}


if (!getProperties().get("disableCodeGeneration", false)) {
    
    def definitions = "../rpc-definitions"

    tasks.create('generateThrift') {

        doLast {
            
            def out = new File("src/main/java")
            if (!out.exists()) {
                out.mkdirs()
            }

            try {

                exec {
                    executable 'thrift'
                    args '-r', '-out', 'src/main/java', '--gen', 'java:private-members,fullcamel', "$definitions/thrift/service.thrift"
                }

            } catch (Exception ex) {
                println ex
            }
            
        }

    }

    protobuf {
        generatedFilesBaseDir = "$projectDir/src"
        protoc {
            artifact = 'com.google.protobuf:protoc:3.9.0'
        }
        plugins {
            grpc {
                artifact = "io.grpc:protoc-gen-grpc-java:${grpc_version}"
            }
        }
        generateProtoTasks {
            ofSourceSet('main')*.plugins {
                grpc {
                    outputSubDir = 'java'
                }
            }
        }

    }

    sourceSets {
        main {
            proto {
                srcDir "$definitions/proto"
            }
        }
    }

    tasks.create('generateAll') {
        dependsOn 'generateProto', 'generateThrift'
    }

}
